events {}

http {
    include       mime.types;
    default_type  application/octet-stream;

    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    server {
        listen 80;
        server_name localhost;

        
        location / {
            proxy_pass         http://backend:5050/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            # Optional: remove trailing slashes to avoid redirect loops
            rewrite ^/(.*)$ /$1 break;
        }
        
        location / {
            proxy_pass         http://frontend:5173/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            # Optional: remove trailing slashes to avoid redirect loops
            rewrite ^/(.*)$ /$1 break;
        }
        
        location / {
            proxy_pass         http://mongodb:27017/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            # Optional: remove trailing slashes to avoid redirect loops
            rewrite ^/(.*)$ /$1 break;
        }
        

        # Catch-all fallback
        location / {
            return 404;
        }
    }
}